{"version":3,"sources":["components/Header.tsx","near/Context.ts","near/Near.ts","components/TotalLostRevenue.tsx","components/UserAcquisition.tsx","components/Charts.tsx","components/Threads.tsx","components/Join.tsx","components/OnePersonCostCounter.tsx","components/User.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["className","role","id","type","to","style","textDecoration","color","onClick","alert","cursor","defaultStat","last1day","last7day","last30day","totalUser","totalSec","timeNow","messages","Context","React","createContext","config","networkId","nodeUrl","contractName","walletUrl","initialBalance","Near","walletAccount","contract","proMethods","Promise","res","getNear","text","date","Date","toISOString","this","methods","addMessage","requestSignIn","window","location","href","formatter","Intl","DateTimeFormat","month","theMonth","months","monthLabels","i","unshift","substr","format","setMonth","getMonth","monthCounters","yearMonth6","join","getRangeMessages","start","length","reduce","acc","cur","logDate","nowDate","diffTime","Math","abs","getTime","ceil","filter","m","Nearlib","Object","assign","deps","keyStore","BrowserLocalStorageKeyStore","loadContract","viewMethods","changeMethods","sender","getAccountId","sum","setSum","second","setSecond","useInterval","totalSum","round","useState","setM","useMemo","then","options","legend","display","fontColor","scales","yAxes","ticks","beginAtZero","data","labels","datasets","backgroundColor","borderColor","pointBackgroundColor","pointRadius","lineTension","history","stat","trs","map","index","diffSecond","diffDays","key","src","photo","alt","name","TotalLostRevenue","Charts","UserAcquisition","push","props","hash","postM","setPostM","sendMessage","console","log","toHash","word","aria-selected","nearSignin","value","onChange","event","currentTarget","maxLength","placeholder","flex","onKeyUp","keyCode","user","userNo","Number","substring","totalCost","width","OnePersonCostCounter","App","setStat","useEffect","Provider","basename","process","Header","path","exact","component","Threads","Join","User","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a63eedb.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default () => {\n  function fbShare() {\n    alert(\"fbShare\");\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"columns three\">\n            <nav role=\"navigation\">\n              <div id=\"menuToggle\">\n                <input type=\"checkbox\" />\n                <span></span>\n                <span></span>\n                <span></span>\n\n                <ul id=\"menu\">\n                  <div className=\"uu-logo-mark\"></div>\n                  <Link to=\"/\">\n                    <li>Home</li>\n                  </Link>\n                  <Link to=\"/\">\n                    <li>About</li>\n                  </Link>\n                  <Link to=\"/\">\n                    <li>Info</li>\n                  </Link>\n                  <Link to=\"/\">\n                    <li>Contact</li>\n                  </Link>\n                </ul>\n              </div>\n            </nav>\n            <div className=\"uu-logo\">\n              <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n                <strong>USERS</strong>UNITED\n              </Link>\n            </div>\n            <div className=\"mobile-login-btn\">\n              <span>\n                <i className=\"fa fa-lock\"></i>\n              </span>\n            </div>\n          </div>\n          <div className=\"menu columns nine\">\n            <span>\n              #BOYCOTT<strong>FACEBOOK</strong>\n            </span>\n            <ul className=\"u-pull-right\">\n              <li className=\"menu-btn\">\n                <div onClick={fbShare} style={{ cursor: \"pointer\" }}>\n                  <span>SHARE</span>\n                  <i className=\"fa fa-share\"></i>\n                </div>\n              </li>\n              <li className=\"menu-btn\" id=\"loginBtn\">\n                <Link to=\"/join\">\n                  <span>Login</span>\n                  <i className=\"fa fa-lock\"></i>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Stats } from \"../near/Near\";\nexport const defaultStat: Stats = {\n  last1day: 0,\n  last7day: 0,\n  last30day: 0,\n  totalUser: 0,\n  totalSec: 0,\n  timeNow: 0,\n  messages: []\n};\nconst Context = React.createContext<Stats>(defaultStat);\nexport default Context;\n","// import config from \"./config\";\nimport * as Nearlib from \"nearlib\";\nimport * as NearType from \"nearlib/lib/near\";\nexport const MS_IN_ONE_DAY = 24 * 60 * 60 * 1000;\nexport const MS_IN_ONE_WEEK = 7 * 24 * 60 * 60 * 1000;\nexport const MS_IN_30_DAYS = 30 * 24 * 60 * 60 * 1000;\nexport const EARNING_PER_SECOND = 0.068 / 24 / 60 / 60;\nexport const ROUNDING = 1000000;\nexport interface MonthsArray {\n  monthLabels: string[];\n  monthCounters: number[];\n}\nexport interface Methods {\n  getRangeMessages: (args: { start: number }) => Promise<any[]>;\n  hasCommented: (args: { id: string }) => Promise<boolean>;\n  monthCounters: (args: { yearMonth6: string }) => Promise<number[]>;\n  getProfile: (args: { id: string }) => Promise<any[]>;\n  addMessage: (args: Partial<Message>) => Promise<void>;\n}\nexport interface Message {\n  index: number;\n  id: string;\n  name: string;\n  text: string;\n  date: string;\n  photo: string;\n  email: string;\n}\nexport interface Stats {\n  last1day: number;\n  last7day: number;\n  last30day: number;\n  totalUser: number;\n  totalSec: number;\n  timeNow: number;\n  messages: any;\n}\nclass NearClass {\n  private config = {\n    networkId: \"default\",\n    nodeUrl: \"https://rpc.nearprotocol.com\",\n    contractName: \"usersunited\",\n    walletUrl: \"https://wallet.nearprotocol.com\",\n    initialBalance: 100000000\n  };\n  private Near: NearType.Near | null = null;\n  private walletAccount: Nearlib.WalletAccount | null = null;\n  private contract: Nearlib.Contract | Methods | null = null;\n  private proMethods: Promise<Methods> = new Promise(res => this.getNear(res));\n  // constructor() {\n  //   // console.log(Nearlib);\n  //   // this.getNear();\n  // }\n  // public methods: Methods = this.contract as Methods;\n  public async addMessage(text: string) {\n    // FB.api(\"/me\", { fields: [\"picture\", \"name\", \"email\"] }, async function ({\n    //   name,\n    //   id,\n    //   email,\n    //   picture\n    // }) {\n    // const photo = picture.data.url;\n    const date = new Date().toISOString();\n    const methods = await this.proMethods;\n    //id, name, email, photo,\n    await methods.addMessage({ text, date });\n    // });\n  }\n  public nearSignin() {\n    this.walletAccount!.requestSignIn(\n      this.config.contractName,\n      \"Users United\",\n      window.location.href,\n      window.location.href\n    );\n  }\n  public async monthCounters(): Promise<MonthsArray> {\n    const formatter = new Intl.DateTimeFormat(\"en\", { month: \"short\" });\n    const methods = await this.proMethods;\n    const theMonth = new Date();\n    const months = [];\n    const monthLabels = [];\n    for (let i = 0; i < 6; i++) {\n      months.unshift(theMonth.toISOString().substr(0, 7));\n      monthLabels.unshift(formatter.format(theMonth));\n      theMonth.setMonth(theMonth.getMonth() - 1);\n    }\n    const monthCounters = await methods.monthCounters({\n      yearMonth6: months.join(\",\")\n    });\n    return { monthLabels, monthCounters };\n  }\n  public async getRangeMessages(): Promise<Stats> {\n    const methods = await this.proMethods;\n    const messages = await methods.getRangeMessages({ start: 0 });\n    const totalUser = messages.length;\n    const totalSec = messages.reduce((acc, cur) => {\n      const logDate = new Date(cur.date);\n      const nowDate = new Date();\n      const diffTime = Math.abs(nowDate.getTime() - logDate.getTime());\n      const diffSecond = Math.ceil(diffTime / 1000);\n      return acc + diffSecond;\n    }, 0);\n    const timeNow = new Date().getTime();\n\n    const last1day = messages.filter(\n      m => timeNow - new Date(m.date).getTime() <= MS_IN_ONE_DAY\n    ).length;\n    const last7day = messages.filter(\n      m => timeNow - new Date(m.date).getTime() <= MS_IN_ONE_WEEK\n    ).length;\n    const last30day = messages.filter(\n      m => timeNow - new Date(m.date).getTime() <= MS_IN_30_DAYS\n    ).length;\n    return {\n      last1day,\n      last7day,\n      last30day,\n      totalUser,\n      totalSec,\n      timeNow,\n      messages\n    };\n  }\n  private async getNear(res: (value?: Methods) => void) {\n    this.Near = await Nearlib.connect(\n      Object.assign(\n        {\n          deps: {\n            keyStore: new Nearlib.keyStores.BrowserLocalStorageKeyStore()\n          }\n        },\n        this.config\n      )\n    );\n    this.walletAccount = new Nearlib.WalletAccount(this.Near, null);\n    // const account = await this.Near.account(this.walletAccount.getAccountId());\n    // this.contract = new Nearlib.Contract(account, this.config.contractName, {\n    //   viewMethods: [\n    //     \"getRangeMessages\",\n    //     \"hasCommented\",\n    //     \"monthCounters\",\n    //     \"getProfile\"\n    //   ],\n    //   changeMethods: [\"addMessage\"]\n    // });\n    this.contract = await this.Near.loadContract(this.config.contractName, {\n      viewMethods: [\n        \"getRangeMessages\",\n        \"hasCommented\",\n        \"monthCounters\",\n        \"getProfile\"\n      ],\n      changeMethods: [\"addMessage\"],\n      sender: this.walletAccount.getAccountId()\n    });\n    res((this.contract as unknown) as Methods);\n  }\n}\n\nexport default new NearClass();\n","import * as React from \"react\";\nimport Context from \"../near/Context\";\nimport useInterval from \"use-interval\";\nimport { EARNING_PER_SECOND, ROUNDING } from \"../near/Near\";\nexport default () => {\n  const { totalSec, totalUser } = React.useContext(Context);\n  const [sum, setSum] = React.useState(0);\n  const [second, setSecond] = React.useState(totalSec);\n  useInterval(() => {\n    setSecond(second + totalUser);\n    const totalSum =\n      Math.round((second + 1 + totalSec) * EARNING_PER_SECOND * ROUNDING) /\n      ROUNDING;\n    setSum(totalSum);\n  }, 1000);\n  return (\n    <p>\n      We are <strong className=\"total-boycott-sum\">{totalUser}</strong> Users\n      United boycotting Facebook resulting in\n      <strong className=\"total-boycott-sum\" id=\"earning-total\">\n        {` $${sum} `}\n      </strong>\n      lost revenue.\n    </p>\n  );\n};\n","import * as React from \"react\";\nimport Context from \"../near/Context\";\nexport default () => {\n  const { last1day, last30day, last7day } = React.useContext(Context);\n  return (\n    <>\n      <section>\n        <span>\n          <aside>LAST</aside>24 HOURS\n        </span>\n        <span className=\"total-boycott-sum\">{last1day}</span>\n      </section>\n      <section>\n        <span>\n          <aside>LAST</aside>7 DAYS\n        </span>\n        <span className=\"total-boycott-sum\">{last7day}</span>\n      </section>\n      <section>\n        <span>\n          <aside>LAST</aside>30 DAYS\n        </span>\n        <span className=\"total-boycott-sum\">{last30day}</span>\n      </section>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Near, { MonthsArray } from \"../near/Near\";\nexport default () => {\n  const [m, setM] = React.useState<MonthsArray | null>(null);\n  React.useMemo(() => Near.monthCounters(), []).then(setM);\n  if (!m) {\n    return null;\n  }\n  return (\n    <Line\n      options={{\n        legend: {\n          display: false,\n          fontColor: \"rgb(255, 99, 132)\"\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                display: false,\n                beginAtZero: true\n              }\n            }\n          ]\n        }\n      }}\n      data={{\n        labels: m.monthLabels,\n        datasets: [\n          {\n            backgroundColor: \"rgba(24, 119, 242,.2)\",\n            borderColor: \"rgba(24, 119, 242)\",\n            data: m.monthCounters,\n            pointBackgroundColor: \"#000\",\n            pointRadius: 4,\n            lineTension: 0\n          }\n        ]\n      }}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TotalLostRevenue from \"./TotalLostRevenue\";\nimport UserAcquisition from \"./UserAcquisition\";\nimport Charts from \"./Charts\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Context from \"../near/Context\";\nimport {\n  MS_IN_ONE_DAY,\n  Message,\n  EARNING_PER_SECOND,\n  ROUNDING\n} from \"../near/Near\";\nimport useInterval from \"use-interval\";\nexport default ({ history }: RouteComponentProps) => {\n  const stat = React.useContext(Context);\n  function toMain() {\n    history.push(\"join\");\n  }\n  const [second, setSecond] = React.useState(0);\n  useInterval(() => setSecond(second + 1), 1000);\n  const trs = stat.messages.map((m: Message, i: number) => {\n    const index = i + 1;\n    const logDate = new Date(m.date);\n    const nowDate = new Date();\n    const diffTime = Math.abs(nowDate.getTime() - logDate.getTime());\n    const diffSecond = Math.ceil(diffTime / 1000) + second;\n    const diffDays = Math.ceil(diffTime / MS_IN_ONE_DAY);\n    return (\n      <tr key={index}>\n        <td>\n          <div className=\"avatar\">\n            <img src={m.photo} alt=\"img\" />\n          </div>\n        </td>\n        <td>\n          <span>\n            <Link className=\"user-num\" to={`/user#${index}`}>\n              #{index}\n            </Link>\n            {m.name} is boycotting Facebook because {m.text}\n          </span>\n        </td>\n        <td>\n          <span className=\"u-pull-right\">\n            <label className=\"user-num\">{diffDays}</label>Days\n          </span>\n        </td>\n        <td>\n          <span className=\"u-pull-right\">\n            <label className=\"user-sum\">\n              $\n              {Math.round(diffSecond * EARNING_PER_SECOND * ROUNDING) /\n                ROUNDING}\n            </label>\n            Boycott Value\n          </span>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <div className=\"log\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"columns three sidebar\">\n            <div className=\"sidebar-content\">\n              <div className=\"campaign-avatar\">\n                <div className=\"facebook-logo\"></div>\n              </div>\n              <TotalLostRevenue />\n              <Charts />\n              <UserAcquisition />\n              <button onClick={toMain} id=\"joinBtn\">\n                Join Boycott\n              </button>\n            </div>\n          </div>\n          <div className=\"columns nine ledger\">\n            <table className=\"u-full-width\">\n              <tbody id=\"near-tbody\">{trs}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// import { HashLink } from \"react-router-hash-link\";\n// import { Link } from \"react-router-dom\";\nimport * as React from \"react\";\nimport TotalLostRevenue from \"./TotalLostRevenue\";\nimport ScrollableAnchor from \"react-scrollable-anchor\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Near from \"../near/Near\";\nimport Charts from \"./Charts\";\nexport default (props: RouteComponentProps) => {\n  const { hash } = window.location;\n  const [postM, setPostM] = React.useState(\"\");\n  function nearLogin() {\n    Near.nearSignin();\n  }\n  function facebookLogin() {}\n  function sendMessage() {\n    console.log(postM);\n    Near.addMessage(postM);\n  }\n  function keyup(event: React.KeyboardEvent) {\n    if (event.keyCode === 13) {\n      sendMessage();\n    }\n  }\n  return (\n    <>\n      <div className=\"how-it-works\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"columns twelve\">\n              <h2>How it works</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"columns four\">\n              <h5>Connect Facebook</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n            <div className=\"columns four\">\n              <h5>Stop using it</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n            <div className=\"columns four\">\n              <h5>Spread the word</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"log\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"columns three sidebar\">\n              <div className=\"sidebar-content\">\n                <div className=\"campaign-avatar\">\n                  <div className=\"facebook-logo\"></div>\n                </div>\n                <h5>Join Boycott</h5>\n                <TotalLostRevenue />\n                <Charts />\n                <ul className=\"sidebar-menu\" role=\"tablist\">\n                  {[\n                    [\"#facebook\", \"Connect\"],\n                    [\"#near\", \"Secure\"],\n                    [\"#post\", \"Post\"]\n                  ].map(([toHash, word], i) => (\n                    <li key={i}>\n                      <a\n                        href={toHash}\n                        role=\"tab\"\n                        aria-selected={\n                          hash === toHash || (i === 0 && hash === \"\")\n                        }\n                      >\n                        {word} <span>{i + 1}</span>\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <ScrollableAnchor id=\"facebook\">\n              <div className=\"columns nine profile-container\">\n                <div className=\"profile-content\">\n                  <span className=\"step-number\">Step One</span>\n                  <h3>Connect Your Account</h3>\n                  <p>\n                    Connect your Facebook account just like you would with any\n                    other app. However, instead of mining your data, Users\n                    United will only access your name, avatar and last login to\n                    track your boycott.\n                  </p>\n                  <button className=\"secondary-btn\" onClick={facebookLogin}>\n                    Log In With Facebook\n                  </button>\n                  <aside>\n                    <span>\n                      <i className=\"fa fa-asterisk\"></i>Yes, the irony of\n                      needing to connect Facebook in order boycott Facebook is\n                      not lost on us. But as Sun Tzu said, \"The opportunity of\n                      defeating the enemy is provided by the enemy.\" ¯\\_(ツ)_/¯\n                    </span>\n                  </aside>\n                </div>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id=\"near\">\n              <div className=\"columns nine profile-container\">\n                <div className=\"profile-content\">\n                  <span className=\"step-number\">Step Two</span>\n                  <h3>Secure Your Account</h3>\n                  <p>\n                    The future of the web is decentralized. You boycott (and any\n                    data associated with it) is stored on a censorship and\n                    tamper resistent blockchain powered by the NEAR Protocol, To\n                    continue, you'll need to create a username and verify your\n                    phone number.\n                  </p>\n                  <button className=\"secondary-btn\" onClick={nearLogin}>\n                    Secure Your Account\n                  </button>\n                  <aside>\n                    <span>\n                      <i className=\"fa fa-asterisk\"></i>NEAR is a sharded,\n                      developer-friendly, proof-of-stake public blockchain.\n                      <a href=\"#learnmore\">Learn more</a>\n                    </span>\n                  </aside>\n                </div>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id=\"post\">\n              <div className=\"columns nine profile-container\">\n                <div className=\"profile-content\">\n                  <span className=\"step-number\">Step Three</span>\n                  <h3>Post Your Boycott</h3>\n                  <p>\n                    What are your reasons for boycotting Facebook? Tired of the\n                    lack of privacy, disinformation, fake news, your uncle's\n                    rants? There's no end, really, so be sure to tell Zuck why\n                    you're boycotting Facebook.\n                  </p>\n                  <input\n                    className=\"u-full-width\"\n                    type=\"text\"\n                    value={postM}\n                    onChange={event => setPostM(event.currentTarget.value)}\n                    maxLength={50}\n                    id=\"message\"\n                    placeholder=\"I am boycotting facebook because...\"\n                    style={{ flex: 1 }}\n                    onKeyUp={keyup}\n                  />\n                  <button className=\"secondary-btn\" onClick={sendMessage}>\n                    Post Boycott\n                  </button>\n                  <aside>\n                    <span>\n                      <i className=\"fa fa-asterisk\"></i>Your message will be\n                      formatted as <strong>{\"{Your Name}\"}</strong> is\n                      boycotting Facebook because{\" \"}\n                      <strong>{`{your reason}`}</strong>. Surely there is a\n                      better way of handling this, but for now it works (fingers\n                      crossed).\n                    </span>\n                  </aside>\n                </div>\n              </div>\n            </ScrollableAnchor>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport useInterval from \"use-interval\";\nimport { EARNING_PER_SECOND, ROUNDING } from \"../near/Near\";\nexport default ({ value }: { value: number }) => {\n  const [second, setSecond] = React.useState(0);\n  useInterval(() => setSecond(second + 1), 1000);\n  return (\n    <>\n      {Math.round((value + EARNING_PER_SECOND * second) * ROUNDING) / ROUNDING}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserAcquisition from \"./UserAcquisition\";\nimport TotalLostRevenue from \"./TotalLostRevenue\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Charts from \"./Charts\";\nimport { Message } from \"../near/Near\";\nimport Context from \"../near/Context\";\nimport OnePersonCostCounter from \"./OnePersonCostCounter\";\nimport { ROUNDING, EARNING_PER_SECOND } from \"../near/Near\";\nexport default (props: RouteComponentProps) => {\n  const { messages } = React.useContext(Context);\n  const { hash } = window.location;\n  const user = React.useMemo(() => {\n    const userNo = Number(hash.substring(1));\n    let user: Message;\n    if (messages.length < 1) {\n      return null;\n    }\n    if (userNo > 0) {\n      user = messages[userNo - 1];\n    } else {\n      user = messages[0];\n    }\n    const logDate = new Date(user.date);\n    const nowDate = new Date();\n    const diffTime = Math.abs(nowDate.getTime() - logDate.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const totalCost =\n      Math.round((diffTime / 1000) * EARNING_PER_SECOND * ROUNDING) / ROUNDING;\n    return {\n      ...user,\n      totalCost,\n      diffDays,\n      userNo\n    };\n  }, [hash, messages]);\n  if (!user) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"how-it-works\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"columns twelve\">\n              <h2>How it works</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"columns four\">\n              <h5>Connect Facebook</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n            <div className=\"columns four\">\n              <h5>Stop using it</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n            <div className=\"columns four\">\n              <h5>Spread the word</h5>\n              <div className=\"steps-img\"></div>\n              <p>We're only as strong as our newest member</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"log\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"columns three sidebar\">\n              <div className=\"sidebar-content\">\n                <div className=\"campaign-avatar\">\n                  <div className=\"facebook-logo\"></div>\n                </div>\n                <TotalLostRevenue />\n                <Charts />\n                <UserAcquisition />\n                <button onClick={() => props.history.push(\"/\")}>\n                  Leaderboard\n                </button>\n              </div>\n            </div>\n            <div id=\"profile\" className=\"columns nine profile-container\">\n              <div className=\"profile-content\">\n                <div className=\"profile-header\">\n                  <div className=\"avatar\">\n                    <img\n                      src={user.photo}\n                      alt=\"img\"\n                      style={{ width: \"inherit\" }}\n                    />\n                  </div>\n                  <section>\n                    <h3>{user.name}</h3>\n                    <a\n                      href={`https://facebook.com/${user.id}`}\n                      className=\"url-address\"\n                    >\n                      https://facebook.com/{user.id}\n                    </a>\n                  </section>\n                </div>\n                <section className=\"user-stats\">\n                  <div>\n                    <h3>\n                      <Link to={`/#${user.userNo}`}>#{user.userNo}</Link>\n                    </h3>\n                    <span>User Number</span>\n                  </div>\n                  <div>\n                    <h3>{user.diffDays}</h3>\n                    <span>Days Boycotting</span>\n                  </div>\n                  <div>\n                    <h3>\n                      $<OnePersonCostCounter value={user.totalCost} />\n                    </h3>\n                    <span>Boycott Value</span>\n                  </div>\n                </section>\n                <p>I am boycotting Facebook until {user.text}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Threads from \"./components/Threads\";\nimport Join from \"./components/Join\";\nimport User from \"./components/User\";\nimport Near, { Stats } from \"./near/Near\";\nimport Context, { defaultStat } from \"./near/Context\";\nconst App: React.FC = () => {\n  const [stat, setStat] = React.useState<Stats>(defaultStat);\n  React.useEffect(() => {\n    Near.getRangeMessages().then(setStat);\n  }, []);\n  return (\n    <Context.Provider value={stat}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Threads} />\n          <Route path=\"/join\" component={Join} />\n          <Route path=\"/user\" component={User} />\n        </Switch>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/normalize.css\";\nimport \"./css/skeleton.css\";\nimport \"./css/landing.css\";\nimport \"./css/fa.min.css\";\nimport \"./css/modal.css\";\nimport \"./css/menu.css\";\nimport \"./css/all.min.css\";\nimport \"./css/tabby-ui-vertical.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}